@model bibliotecaModel.ModelFuncionario

@{
    ViewBag.Title = "Cadastrar";
}


<link href="~/CSS/style.css" rel="stylesheet" type="text/css" />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <!--Cadastro Funcionário-->
    <section class="sec-cadastrar">
        <div class="form-horizontal">
            <!--Titulo e Logo-->
            <div class="info-cadastrar">
                <h1>Cadastro de Funcionário</h1>
                <img src="~/Images/logo-branca.svg" alt="">
            </div>
            <hr />
            <!--Campos de Cadastro-->
            <div class="itens-cadastro">
                @Html.LabelFor(model => model.nome_func, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nome_func, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nome_func, "", new { @class = "text-danger" })
                </div>
            </div>

<<<<<<< HEAD
            <div class="itens-cadastro">
                @Html.LabelFor(model => model.email_func, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email_func, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email_func, "", new { @class = "text-danger" })
                </div>
=======
        <div class="form-group">
            @Html.LabelFor(model => model.email_func, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email_func, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email_func, "", new { @class = "text-danger" })
                @ViewBag.Email
>>>>>>> df03e5be2f99826adbabb601c2f089a01fb38c06
            </div>

<<<<<<< HEAD
            <div class="itens-cadastro">
                @Html.LabelFor(model => model.tel_func, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tel_func, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tel_func, "", new { @class = "text-danger" })
                </div>
=======
        <div class="form-group">
            @Html.LabelFor(model => model.CPF_func, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CPF_func, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CPF_func, "", new { @class = "text-danger" })
                @ViewBag.CPF
>>>>>>> df03e5be2f99826adbabb601c2f089a01fb38c06
            </div>

            <div class="itens-cadastro">
                @Html.LabelFor(model => model.nasc_func, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nasc_func, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nasc_func, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="itens-cadastro">
                @Html.LabelFor(model => model.CPF_func, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CPF_func, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CPF_func, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="itens-cadastro">
                @Html.LabelFor(model => model.cep_func, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.cep_func, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cep_func, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="itens-cadastro">
                @Html.LabelFor(model => model.logradouro_func, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.logradouro_func, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.logradouro_func, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="itens-cadastro">
                @Html.LabelFor(model => model.num_func, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.num_func, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.num_func, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="itens-cadastro">
                @Html.LabelFor(model => model.senha_func, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.senha_func, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.senha_func, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="botao-cadastrar" />
                </div>
            </div>
        </div>
    </section>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
